{"version":3,"sources":["components/appHeader/AppHeader.js","resources/img/mjolnir.png","services/MarvelService.js","components/spinner/Spinner.js","components/error/error.gif","components/error/Error.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","resources/img/vision.png","components/errorBoundary/ErrorBoundary.js","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","limit","data","results","map","i","_transformCharacter","getCharacter","id","char","description","length","substr","name","thumbnail","path","extension","homepage","urls","wiki","comics","items","resourceURI","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","objectFit","src","imgError","alt","RandomChar","state","loading","error","serv","updateChar","setState","Math","floor","random","then","onCharLoaded","catch","onError","err","this","errorMessage","spinner","view","onClick","mjolnir","Component","View","includes","CharList","elems","list","charsEnded","loadMoreWhenScrolledToBottom","window","innerHeight","scrollY","document","body","offsetHeight","updateList","offsetShift","newOffset","onListLoaded","ended","onClickLoadMore","focusOnItem","Object","value","classList","remove","focus","add","setRef","elem","getAttribute","addEventListener","removeEventListener","listChar","item","ref","props","onCharSelect","onKeyPress","e","key","preventDefault","tabIndex","listErrLoad","push","padding","alignItems","backgroundColor","disabled","defaultProps","console","log","Skeleton","CharInfo","selectedChar","prevProps","prevState","skeleton","comicsList","Comics","slice","ErrorBoundary","children","App","decoration","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f4b5aea8.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#l\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#l\">Characters</a></li>\n                    /\n                    <li><a href=\"#l\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","\r\n\r\nexport default class MarvelService {\r\n\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'apikey=8cf3a3e4276e9a02be2289bf4ce358a0';\r\n    _baseOffset = 210;\r\n\r\n    getResource = async ( url ) => {\r\n        let res = await fetch(url);\r\n        if (!res.ok) {\r\n            throw new Error(`Couldn't fetch ${url}, status: ${res.status}`);\r\n        }\r\n        return await res.json();\r\n    }\r\n\r\n\r\n    getAllCharacters = async (offset=this._baseOffset, limit=9) => {\r\n        const res = await this.getResource(`${this._apiBase}characters?limit=${limit}&offset=${offset}&${this._apiKey}`);\r\n        return res.data.results.map(i => this._transformCharacter(i));      \r\n    }\r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n        return this._transformCharacter(res.data.results[0]);              \r\n    }\r\n\r\n    _transformCharacter = (char) => {\r\n\r\n        const description = char.description.length > 220 ? (char.description.substr(0, 220) + '...') : char.description;\r\n\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: description || 'No description',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items.length ? char.comics.items : [{resourceURI: '', name: 'There are no comics with this character yet'}]\r\n        }\r\n    }\r\n\r\n}\r\n\r\n","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import imgError from './error.gif'\r\nconst Error = () => {\r\n    return (\r\n        // <img className='error' src={process.env.PUBLIC_URL + '/error.gif'} alt='error'/>\r\n        <img style={{ display: 'block', width: \"200px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\",  transform: 'none'}} \r\n             className='error' \r\n             src={imgError} \r\n             alt='error'/>\r\n    );\r\n} \r\n\r\nexport default Error","import './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport { Component } from 'react';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport Error from '../error/Error';\n \nclass RandomChar extends Component {\n\n    state = {\n        char: null,\n        loading: true,\n        error: false\n    }\n\n    serv = new MarvelService()\n    \n    componentDidMount() {\n        this.updateChar();  \n    }\n\n    updateChar = () => {\n        this.setState({loading: true});\n\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        \n        this.serv.getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError)      \n    }\n\n    onCharLoaded = (char) => {\n        this.setState(\n            {\n                char, \n                loading: false\n            }\n        )\n    }\n\n    onError = (err) => {\n        \n        this.setState(\n            {\n                char: null,\n                loading: false, \n                error: true\n            }\n        )\n    }\n\n    render () {\n\n        const {loading, char, error} = this.state;\n\n        const errorMessage = error ? <Error/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const view = !(loading || error) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {view}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\">\n                        <div className=\"inner\" onClick={this.updateChar}>try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        );\n\n    }\n\n}\n\nconst View = ({char: {name, description, thumbnail, homepage, wiki}}) => {\n    return (\n            <div className=\"randomchar__block\">\n                \n                <img \n                    style={ thumbnail.includes('image_not_available.jpg') ? {objectFit: 'fill'} : {}}\n                    src={thumbnail} \n                    alt={name} \n                    className=\"randomchar__img\"\n                />\n                \n                <div className=\"randomchar__info\">\n                    <p className=\"randomchar__name\">{name}</p>\n                    <p className=\"randomchar__descr\">\n                        {description}\n                    </p>\n                    <div className=\"randomchar__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>  \n    );\n}\n\nexport default RandomChar;","import './charList.scss';\nimport { Component } from 'react';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport Error from '../error/Error';\nimport PropTypes from 'prop-types';\n\nclass CharList extends Component {\n\n    serv = new MarvelService()\n\n    elems = {}\n\n    state = {\n        list: [],\n        loading: true,\n        error: false,\n        offset: 210,\n        charsEnded: false\n    }\n\n\n    loadMoreWhenScrolledToBottom = () => {\n        if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight) {\n            this.updateList(9);\n        }        \n    }\n\n    componentDidMount() {\n        this.updateList();\n        window.addEventListener('scroll', this.loadMoreWhenScrolledToBottom);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.loadMoreWhenScrolledToBottom);\n    }\n\n    updateList = (offsetShift=0) => {\n        \n        const newOffset = this.state.offset + offsetShift;\n\n        this.setState({\n            loading: true,\n            error: false,\n            offset: newOffset\n        });\n\n        this.serv.getAllCharacters(newOffset)\n            .then(this.onListLoaded)\n            .catch(this.onError);\n    }\n\n    onListLoaded = (list) => {\n\n        const ended = list.length < 9;\n\n        this.setState((state) => ({\n            list: [...state.list, ...list],\n            loading: false,\n            charsEnded: ended\n        }))\n       \n    }\n\n    onError = (err) => {\n        this.setState({\n            list: [],\n            error: true,\n            loading: false\n        })\n    }\n\n    onClickLoadMore = () => {\n        this.updateList(9);\n    }\n\n    focusOnItem = (id) => {\n        for (const value of Object.values(this.elems)) {\n            if (value) {\n                value.classList.remove(\"char__item_selected\")\n            }\n          }\n\n        this.elems[id].focus()\n        this.elems[id].classList.add(\"char__item_selected\")\n    }\n\n    setRef = elem => {\n        if (elem) {\n            const id = elem.getAttribute('data-id')\n            this.elems[id] = elem \n        }\n    }\n\n    render() {\n\n        const {list, loading, error} = this.state; \n        const spinner = loading ? <Spinner/> : null;\n        const errorMessage = error ? <Error/> : null;\n\n        const listChar = list.map((item, i) => \n                    <li key={item.id} \n                        ref={this.setRef} \n                        data-id={item.id}\n                        className=\"char__item\" \n                        onClick={() => {\n                            this.props.onCharSelect(item.id)\n                            this.focusOnItem(item.id)\n                        }}\n                        onKeyPress={(e) => {\n                            if (e.key === ' ' || e.key === 'Enter') {\n                                this.props.onCharSelect(item.id)\n                                this.focusOnItem(item.id)\n                                e.preventDefault()\n                            }\n                        }}\n                        tabIndex={0}>\n\n                        <img \n                            style={ item.thumbnail.includes('image_not_available.jpg') ? {objectFit: 'fill'} : {}}\n                            src={item.thumbnail} \n                            alt={item.name}/>\n                        <div \n                            className=\"char__name\">\n                                {item.name}\n                        </div>\n                        {spinner}\n                        {errorMessage}\n                    </li>\n                    );\n\n        const listErrLoad = []; \n        for (let i = 0; i < 6; i++) {\n            listErrLoad.push(\n                <li style={{padding: 0, display: 'flex', alignItems: 'center', backgroundColor: 'white'}} key={i} className=\"char__item\">\n                    {spinner}\n                    {errorMessage}\n                </li>\n            )\n        }\n\n        return (\n            <div className=\"char__list\">\n                <ul className=\"char__grid\">\n                    {!( loading || errorMessage) ? listChar : listErrLoad}    \n                </ul>\n                <button \n                    className=\"button button__main button__long\"\n                    onClick={this.onClickLoadMore}\n                    disabled={loading}\n                    style={{display: this.state.charsEnded ? 'none' : 'block' }}\n                >\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }    \n}\n\nCharList.propTypes = {\n    onCharSelect: PropTypes.func\n}\n\nCharList.defaultProps = {\n    onCharSelect: () => {\n        console.log('default behavior')\n    }\n}\n\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import './charInfo.scss';\nimport { Component } from 'react';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport Error from '../error/Error';\nimport Skeleton from '../skeleton/Skeleton'\nimport PropTypes from 'prop-types';\n\nclass CharInfo extends Component {\n\n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n\n    serv = new MarvelService()\n    \n    componentDidUpdate(prevProps, prevState) {\n\n        if (prevProps.selectedChar === this.props.selectedChar) {\n            return;\n        }\n        \n        this.updateChar();  \n    }\n\n    updateChar = () => {\n\n        if ( !this.props.selectedChar ) return;      \n\n        this.setState({loading: true});\n        \n        this.serv.getCharacter(this.props.selectedChar)\n            .then(this.onCharLoaded)\n            .catch(this.onError)      \n    }\n\n    onCharLoaded = (char) => {\n        this.setState(\n            {\n                char, \n                loading: false\n            }\n        )\n    }\n\n    onError = (err) => {\n        \n        this.setState(\n            {\n                char: null,\n                loading: false, \n                error: true\n            }\n        )\n    }\n    \n    render () {\n\n        const {loading, char, error} = this.state;\n\n        const skeleton = !(loading || error || char) ? <Skeleton/> : null;\n        const errorMessage = error ? <Error/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const view = !(loading || error || !char) ? <View char={char}/> : null;\n \n        return (\n            <div className=\"char__info\">\n                {errorMessage}\n                {spinner}\n                {skeleton}\n                {view}\n            </div>\n        )        \n    }\n}\n\nconst View = ({char: {name, description, thumbnail, homepage, wiki, comics}}) => {\n    return (<>\n                <div className=\"char__basics\">\n                <img \n                    style={ thumbnail.includes('image_not_available.jpg') ? {objectFit: 'fill'} : {}}\n                    src={thumbnail}\n                    alt={name}\n                />\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">wiki</div>\n                        </a>\n                    </div>\n                </div>\n                </div>\n                <div className=\"char__descr\">\n                    {description}\n                </div>\n                <div className=\"char__comics\">Comics:</div>\n                <ul className=\"char__comics-list\">\n                    <Comics comicsList={comics}/>\n                </ul> \n            </>\n    );\n}\n\nconst Comics = ({comicsList}) => {\n    return (\n        comicsList.slice(0, 10).map((i, key) => (\n            <li key={i.resourceURI} data-url={i.resourceURI} className=\"char__comics-item\">\n                {i.name}\n            </li>\n        ))\n    );\n}\n\nCharInfo.propTypes = {\n    selectedChar: PropTypes.number\n}\n\nexport default CharInfo;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\r\nimport Error from \"../error/Error\";\r\n\r\nclass ErrorBoundary extends Component {\r\n\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({error: true})\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.state.error) {\r\n            return this.props.children\r\n        } \r\n\r\n        return <Error/>\r\n\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary","import AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\n\nimport decoration from '../../resources/img/vision.png';\nimport React, { Component } from \"react\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nclass App extends Component {\n\n    state = {\n        selectedChar: null        \n    }    \n\n    onCharSelect = (selectedChar) => {\n        console.log(selectedChar);\n        this.setState({\n            selectedChar\n        });\n    }\n\n    render () {\n\n        const showChildrenAndRenderPropsExample = false;\n\n        return (\n            <div className=\"app\">\n                { showChildrenAndRenderPropsExample ? \n                    <>\n                        <Fields\n                            left = {\n                                <DynamicGreeting color={'primary'}>\n                                    <h2>jopa</h2>\n                                    <h3>lunatic asylum</h3>\n                                </DynamicGreeting>                        \n                            }\n\n                            right = {\n                                <><h4> The right field </h4>\n                                </>\n                            }\n                        />\n                        <Counter render = {counter => <h6> count: {counter}</h6>}/>\n                        <Counter render = {counter => <div> another count: {counter}</div>}/>\n                    </>\n                : null\n                }\n\n                <AppHeader/>\n                <main>\n                    <ErrorBoundary><RandomChar/></ErrorBoundary>                    \n                    <div className=\"char__content\">\n\n                        <ErrorBoundary>\n                            <CharList onCharSelect={this.onCharSelect}/>\n                        </ErrorBoundary>\n                        <ErrorBoundary><CharInfo selectedChar={this.state.selectedChar}/></ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nconst DynamicGreeting = (props) => {\n    return (\n        <div className={'mb-3 p-3 border border-' + props.color}>\n            {\n                React.Children.map(props.children, child => {\n                    return React.cloneElement(child, {style: {color: 'red'}})\n                })\n            }\n        </div>\n    )\n}\nconst Fields = (props) => {\n    return (\n        <div style = {{display: 'flex', background: 'beige'}}>\n            <div style = {{flex: 'left'}}>\n                {props.left}\n            </div>\n            <div style = {{flex: 'right'}}>\n                {props.right}\n            </div>\n\n        </div>\n    )\n}\nclass Counter extends Component {\n    state = {\n        counter: 0\n    }\n\n    increase = () => {\n        this.setState(state => ({\n            counter: state.counter + 1\n        }))\n        \n    }\n\n    render() {\n        return (\n            <div style={{display: 'flex'}}>\n                <button onClick={this.increase}>inc</button>\n\n                {this.props.render(this.state.counter)}\n\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}